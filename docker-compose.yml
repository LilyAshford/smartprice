services:
  db:
    image: postgres:15-alpine
    container_name: smartprice-postgres
    environment:
      - POSTGRES_USER=lily
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=smartprice
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lily -d smartprice"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 30s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: smartprice-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "--no-auth-warning", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  web:
    build: .
    container_name: smartprice-web
    env_file:
      - .env
    entrypoint: ./entrypoint.sh
    command: [ "bash", "-c", "flask db upgrade && gunicorn --config /app/gunicorn.conf.py app.wsgi:app" ]
    ports:
      - "5000:5000"
    environment:
      - RUNNING_IN_DOCKER=true
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
    volumes:
      - ./.env:/app/.env:ro
      - ./logs:/app/logs
      - ./gunicorn.conf.py:/app/gunicorn.conf.py:ro
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  celery-worker:
    build: .
    container_name: smartprice-celery-worker-1
    entrypoint: [ ]
    command: [ "bash", "-c", "celery -A app.wsgi.celery worker -l info" ]
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  celery-beat:
    build: .
    container_name: smartprice-celery-beat
    entrypoint: [ ]
    command: [ "bash", "-c", "celery -A app.wsgi.celery beat -l info -s /app/celerybeat-schedule" ]
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  flower:
    build: .
    container_name: smartprice-flower
    command: [ "bash", "-c", "celery -A app.wsgi.celery flower --port=5555" ]
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: smartprice-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./.htpasswd:/etc/nginx/conf.d/.htpasswd:ro
      - ./app/static:/app/static
      - cert_data:/etc/letsencrypt
    depends_on:
      - web
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: smartprice-certbot
    volumes:
      - cert_data:/etc/letsencrypt
      - ./app/static:/var/lib/certbot
    entrypoint: [ "/bin/sh", "-c" ]
    command: [ "trap 'exit 0' SIGTERM; while true; do sleep 3600; done" ]


volumes:
  postgres_data:
  redis_data:
  cert_data:
  dhparam_data:
