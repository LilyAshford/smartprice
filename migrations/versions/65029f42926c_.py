"""empty message

Revision ID: 65029f42926c
Revises: 
Create Date: 2025-06-27 06:23:49.283627

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '65029f42926c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('level', sa.String(length=50), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('module', sa.String(length=100), nullable=True),
    sa.Column('func_name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_logs_level'), ['level'], unique=False)
        batch_op.create_index(batch_op.f('ix_logs_timestamp'), ['timestamp'], unique=False)

    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_default'), ['default'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('last_password_change', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('enable_price_drop_notifications', sa.Boolean(), nullable=False),
    sa.Column('enable_target_price_reached_notifications', sa.Boolean(), nullable=False),
    sa.Column('enable_email_notifications', sa.Boolean(), nullable=False),
    sa.Column('telegram_chat_id', sa.String(length=50), nullable=True),
    sa.Column('telegram_linking_token', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('telegram_chat_id'),
    sa.UniqueConstraint('telegram_linking_token'),
    sa.UniqueConstraint('username')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('ix_user_email', ['email'], unique=True)
        batch_op.create_index('ix_user_verified', ['confirmed'], unique=False)

    op.create_table('feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.Enum('BUG', 'SUGGESTION', 'PRAISE', 'OTHER', name='feedbackcategory'), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('page_url', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('feedback', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_feedback_timestamp'), ['timestamp'], unique=False)

    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('target_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('price_drop_alert_threshold', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('price_increase_alert_threshold', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('notification_methods', sa.ARRAY(sa.String(length=20)), nullable=False),
    sa.Column('target_price_notified', sa.Boolean(), nullable=True),
    sa.Column('check_frequency', sa.Integer(), nullable=False),
    sa.Column('current_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('last_checked', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index('ix_product_last_checked', ['last_checked'], unique=False)
        batch_op.create_index('ix_product_url', ['url'], unique=False)
        batch_op.create_index('ix_product_user_id', ['user_id'], unique=False)

    op.create_table('price_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('price_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_price_history_product_id'), ['product_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_price_history_timestamp'), ['timestamp'], unique=False)

    op.create_table('user_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('short_message', sa.String(length=255), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_notifications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_notifications_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_notifications_is_read'), ['is_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_notifications_type'), ['type'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_notifications_type'))
        batch_op.drop_index(batch_op.f('ix_user_notifications_is_read'))
        batch_op.drop_index(batch_op.f('ix_user_notifications_created_at'))

    op.drop_table('user_notifications')
    with op.batch_alter_table('price_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_price_history_timestamp'))
        batch_op.drop_index(batch_op.f('ix_price_history_product_id'))

    op.drop_table('price_history')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index('ix_product_user_id')
        batch_op.drop_index('ix_product_url')
        batch_op.drop_index('ix_product_last_checked')

    op.drop_table('products')
    with op.batch_alter_table('feedback', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_feedback_timestamp'))

    op.drop_table('feedback')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('ix_user_verified')
        batch_op.drop_index('ix_user_email')

    op.drop_table('users')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_default'))

    op.drop_table('roles')
    with op.batch_alter_table('logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_logs_timestamp'))
        batch_op.drop_index(batch_op.f('ix_logs_level'))

    op.drop_table('logs')
    # ### end Alembic commands ###
